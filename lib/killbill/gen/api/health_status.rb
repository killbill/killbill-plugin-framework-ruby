#############################################################################################
#                                                                                           #
#                   Copyright 2010-2013 Ning, Inc.                                          #
#                   Copyright 2014 Groupon, Inc.                                            #
#                   Copyright 2014 The Billing Project, LLC                                 #
#                                                                                           #
#      The Billing Project licenses this file to you under the Apache License, version 2.0  #
#      (the "License"); you may not use this file except in compliance with the             #
#      License.  You may obtain a copy of the License at:                                   #
#                                                                                           #
#          http://www.apache.org/licenses/LICENSE-2.0                                       #
#                                                                                           #
#      Unless required by applicable law or agreed to in writing, software                  #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT            #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the            #
#      License for the specific language governing permissions and limitations              #
#      under the License.                                                                   #
#                                                                                           #
#############################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      class HealthStatus


        attr_accessor :is_healthy, :details

        def initialize()
        end

        def to_java()
          # conversion for is_healthy [type = boolean]
          @is_healthy = @is_healthy.nil? ? java.lang.Boolean.new(false) : java.lang.Boolean.new(@is_healthy)

          # conversion for details [type = java.util.Map]
          tmp = java.util.HashMap.new
          (@details || {}).each do |k,v|
          tmp.put(k, v)
        end
      @details = tmp
      Java::org.killbill.billing.osgi.api.HealthStatus.new(@is_healthy, @details)
    end

    def to_ruby(j_obj)
      # conversion for is_healthy [type = boolean]
      @is_healthy = j_obj.is_healthy
      if @is_healthy.nil?
        @is_healthy = false
      else
        tmp_bool = (@is_healthy.java_kind_of? java.lang.Boolean) ? @is_healthy.boolean_value : @is_healthy
        @is_healthy = tmp_bool ? true : false
      end

      # conversion for details [type = java.util.Map]
      @details = j_obj.details
      tmp = {}
      jtmp0 = @details || java.util.HashMap.new
      jtmp0.key_set.each do |k|
      v = jtmp0.get(k)
      tmp[k] = v
    end
  @details = tmp
  self
end

end
end
end
end
