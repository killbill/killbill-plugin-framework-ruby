#############################################################################################
#                                                                                           #
#                   Copyright 2010-2013 Ning, Inc.                                          #
#                   Copyright 2014 Groupon, Inc.                                            #
#                   Copyright 2014 The Billing Project, LLC                                 #
#                                                                                           #
#      The Billing Project licenses this file to you under the Apache License, version 2.0  #
#      (the "License"); you may not use this file except in compliance with the             #
#      License.  You may obtain a copy of the License at:                                   #
#                                                                                           #
#          http://www.apache.org/licenses/LICENSE-2.0                                       #
#                                                                                           #
#      Unless required by applicable law or agreed to in writing, software                  #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT            #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the            #
#      License for the specific language governing permissions and limitations              #
#      under the License.                                                                   #
#                                                                                           #
#############################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      java_package 'org.killbill.billing.overdue.api'
      class OverdueCondition

        include org.killbill.billing.overdue.api.OverdueCondition

        attr_accessor :number_of_unpaid_invoices_equals_or_exceeds, :total_unpaid_invoice_balance_equals_or_exceeds, :time_since_earliest_unpaid_invoice_equals_or_exceeds, :response_for_last_failed_payment_in, :inclusion_control_tag_type, :exclusion_control_tag_type

        def initialize()
        end

        def to_java()
          # conversion for number_of_unpaid_invoices_equals_or_exceeds [type = java.lang.Integer]
          @number_of_unpaid_invoices_equals_or_exceeds = @number_of_unpaid_invoices_equals_or_exceeds

          # conversion for total_unpaid_invoice_balance_equals_or_exceeds [type = java.math.BigDecimal]
          if @total_unpaid_invoice_balance_equals_or_exceeds.nil?
            @total_unpaid_invoice_balance_equals_or_exceeds = java.math.BigDecimal::ZERO
          else
            @total_unpaid_invoice_balance_equals_or_exceeds = java.math.BigDecimal.new(@total_unpaid_invoice_balance_equals_or_exceeds.to_s)
          end

          # conversion for time_since_earliest_unpaid_invoice_equals_or_exceeds [type = org.killbill.billing.catalog.api.Duration]
          @time_since_earliest_unpaid_invoice_equals_or_exceeds = @time_since_earliest_unpaid_invoice_equals_or_exceeds.to_java unless @time_since_earliest_unpaid_invoice_equals_or_exceeds.nil?

          # conversion for response_for_last_failed_payment_in [type = org.killbill.billing.payment.api.PaymentResponse[]]
          tmp = []
          (@response_for_last_failed_payment_in || []).each do |m|
            # conversion for m [type = org.killbill.billing.payment.api.PaymentResponse]
            m = Java::org.killbill.billing.payment.api.PaymentResponse.value_of( m.to_s ) unless m.nil?
            tmp << m
          end
          @response_for_last_failed_payment_in = tmp.to_java Java::org.killbill.billing.payment.api.PaymentResponse

          # conversion for inclusion_control_tag_type [type = org.killbill.billing.util.tag.ControlTagType]
          @inclusion_control_tag_type = Java::org.killbill.billing.util.tag.ControlTagType.value_of( @inclusion_control_tag_type.to_s ) unless @inclusion_control_tag_type.nil?

          # conversion for exclusion_control_tag_type [type = org.killbill.billing.util.tag.ControlTagType]
          @exclusion_control_tag_type = Java::org.killbill.billing.util.tag.ControlTagType.value_of( @exclusion_control_tag_type.to_s ) unless @exclusion_control_tag_type.nil?
          self
        end

        def to_ruby(j_obj)
          # conversion for number_of_unpaid_invoices_equals_or_exceeds [type = java.lang.Integer]
          @number_of_unpaid_invoices_equals_or_exceeds = j_obj.number_of_unpaid_invoices_equals_or_exceeds

          # conversion for total_unpaid_invoice_balance_equals_or_exceeds [type = java.math.BigDecimal]
          @total_unpaid_invoice_balance_equals_or_exceeds = j_obj.total_unpaid_invoice_balance_equals_or_exceeds
          @total_unpaid_invoice_balance_equals_or_exceeds = @total_unpaid_invoice_balance_equals_or_exceeds.nil? ? 0 : BigDecimal.new(@total_unpaid_invoice_balance_equals_or_exceeds.to_s)

          # conversion for time_since_earliest_unpaid_invoice_equals_or_exceeds [type = org.killbill.billing.catalog.api.Duration]
          @time_since_earliest_unpaid_invoice_equals_or_exceeds = j_obj.time_since_earliest_unpaid_invoice_equals_or_exceeds
          @time_since_earliest_unpaid_invoice_equals_or_exceeds = Killbill::Plugin::Model::Duration.new.to_ruby(@time_since_earliest_unpaid_invoice_equals_or_exceeds) unless @time_since_earliest_unpaid_invoice_equals_or_exceeds.nil?

          # conversion for response_for_last_failed_payment_in [type = org.killbill.billing.payment.api.PaymentResponse[]]
          @response_for_last_failed_payment_in = j_obj.response_for_last_failed_payment_in
          tmp = []
          (@response_for_last_failed_payment_in || []).each do |m|
            # conversion for m [type = org.killbill.billing.payment.api.PaymentResponse]
            m = m.to_s.to_sym unless m.nil?
            tmp << m
          end
          @response_for_last_failed_payment_in = tmp

          # conversion for inclusion_control_tag_type [type = org.killbill.billing.util.tag.ControlTagType]
          @inclusion_control_tag_type = j_obj.inclusion_control_tag_type
          @inclusion_control_tag_type = @inclusion_control_tag_type.to_s.to_sym unless @inclusion_control_tag_type.nil?

          # conversion for exclusion_control_tag_type [type = org.killbill.billing.util.tag.ControlTagType]
          @exclusion_control_tag_type = j_obj.exclusion_control_tag_type
          @exclusion_control_tag_type = @exclusion_control_tag_type.to_s.to_sym unless @exclusion_control_tag_type.nil?
          self
        end

      end
    end
  end
end
