#############################################################################################
#                                                                                           #
#                   Copyright 2010-2013 Ning, Inc.                                          #
#                   Copyright 2014 Groupon, Inc.                                            #
#                   Copyright 2014 The Billing Project, LLC                                 #
#                                                                                           #
#      The Billing Project licenses this file to you under the Apache License, version 2.0  #
#      (the "License"); you may not use this file except in compliance with the             #
#      License.  You may obtain a copy of the License at:                                   #
#                                                                                           #
#          http://www.apache.org/licenses/LICENSE-2.0                                       #
#                                                                                           #
#      Unless required by applicable law or agreed to in writing, software                  #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT            #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the            #
#      License for the specific language governing permissions and limitations              #
#      under the License.                                                                   #
#                                                                                           #
#############################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      java_package 'org.killbill.billing.overdue.api'
      class OverdueState

        include org.killbill.billing.overdue.api.OverdueState

        attr_accessor :overdue_condition, :name, :external_message, :is_block_changes, :is_disable_entitlement_and_changes_blocked, :overdue_cancellation_policy, :is_clear_state, :auto_reevaluation_interval

        def initialize()
        end

        def to_java()
          # conversion for overdue_condition [type = org.killbill.billing.overdue.api.OverdueCondition]
          @overdue_condition = @overdue_condition.to_java unless @overdue_condition.nil?

          # conversion for name [type = java.lang.String]
          @name = @name.to_s unless @name.nil?

          # conversion for external_message [type = java.lang.String]
          @external_message = @external_message.to_s unless @external_message.nil?

          # conversion for is_block_changes [type = boolean]
          @is_block_changes = @is_block_changes.nil? ? java.lang.Boolean.new(false) : java.lang.Boolean.new(@is_block_changes)

          # conversion for is_disable_entitlement_and_changes_blocked [type = boolean]
          @is_disable_entitlement_and_changes_blocked = @is_disable_entitlement_and_changes_blocked.nil? ? java.lang.Boolean.new(false) : java.lang.Boolean.new(@is_disable_entitlement_and_changes_blocked)

          # conversion for overdue_cancellation_policy [type = org.killbill.billing.overdue.api.OverdueCancellationPolicy]
          @overdue_cancellation_policy = Java::org.killbill.billing.overdue.api.OverdueCancellationPolicy.value_of( @overdue_cancellation_policy.to_s ) unless @overdue_cancellation_policy.nil?

          # conversion for is_clear_state [type = boolean]
          @is_clear_state = @is_clear_state.nil? ? java.lang.Boolean.new(false) : java.lang.Boolean.new(@is_clear_state)

          # conversion for auto_reevaluation_interval [type = org.killbill.billing.catalog.api.Duration]
          @auto_reevaluation_interval = @auto_reevaluation_interval.to_java unless @auto_reevaluation_interval.nil?
          self
        end

        def to_ruby(j_obj)
          # conversion for overdue_condition [type = org.killbill.billing.overdue.api.OverdueCondition]
          @overdue_condition = j_obj.overdue_condition
          @overdue_condition = Killbill::Plugin::Model::OverdueCondition.new.to_ruby(@overdue_condition) unless @overdue_condition.nil?

          # conversion for name [type = java.lang.String]
          @name = j_obj.name

          # conversion for external_message [type = java.lang.String]
          @external_message = j_obj.external_message

          # conversion for is_block_changes [type = boolean]
          @is_block_changes = j_obj.is_block_changes
          if @is_block_changes.nil?
            @is_block_changes = false
          else
            tmp_bool = (@is_block_changes.java_kind_of? java.lang.Boolean) ? @is_block_changes.boolean_value : @is_block_changes
            @is_block_changes = tmp_bool ? true : false
          end

          # conversion for is_disable_entitlement_and_changes_blocked [type = boolean]
          @is_disable_entitlement_and_changes_blocked = j_obj.is_disable_entitlement_and_changes_blocked
          if @is_disable_entitlement_and_changes_blocked.nil?
            @is_disable_entitlement_and_changes_blocked = false
          else
            tmp_bool = (@is_disable_entitlement_and_changes_blocked.java_kind_of? java.lang.Boolean) ? @is_disable_entitlement_and_changes_blocked.boolean_value : @is_disable_entitlement_and_changes_blocked
            @is_disable_entitlement_and_changes_blocked = tmp_bool ? true : false
          end

          # conversion for overdue_cancellation_policy [type = org.killbill.billing.overdue.api.OverdueCancellationPolicy]
          @overdue_cancellation_policy = j_obj.overdue_cancellation_policy
          @overdue_cancellation_policy = @overdue_cancellation_policy.to_s.to_sym unless @overdue_cancellation_policy.nil?

          # conversion for is_clear_state [type = boolean]
          @is_clear_state = j_obj.is_clear_state
          if @is_clear_state.nil?
            @is_clear_state = false
          else
            tmp_bool = (@is_clear_state.java_kind_of? java.lang.Boolean) ? @is_clear_state.boolean_value : @is_clear_state
            @is_clear_state = tmp_bool ? true : false
          end

          # conversion for auto_reevaluation_interval [type = org.killbill.billing.catalog.api.Duration]
          @auto_reevaluation_interval = j_obj.auto_reevaluation_interval
          @auto_reevaluation_interval = Killbill::Plugin::Model::Duration.new.to_ruby(@auto_reevaluation_interval) unless @auto_reevaluation_interval.nil?
          self
        end

      end
    end
  end
end
