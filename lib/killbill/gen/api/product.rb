#############################################################################################
#                                                                                           #
#                   Copyright 2010-2013 Ning, Inc.                                          #
#                   Copyright 2014 Groupon, Inc.                                            #
#                   Copyright 2014 The Billing Project, LLC                                 #
#                                                                                           #
#      The Billing Project licenses this file to you under the Apache License, version 2.0  #
#      (the "License"); you may not use this file except in compliance with the             #
#      License.  You may obtain a copy of the License at:                                   #
#                                                                                           #
#          http://www.apache.org/licenses/LICENSE-2.0                                       #
#                                                                                           #
#      Unless required by applicable law or agreed to in writing, software                  #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT            #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the            #
#      License for the specific language governing permissions and limitations              #
#      under the License.                                                                   #
#                                                                                           #
#############################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      java_package 'org.killbill.billing.catalog.api'
      class Product

        include org.killbill.billing.catalog.api.Product

        attr_accessor :name, :pretty_name, :available, :included, :category, :catalog_name, :limits

        def initialize()
        end

        def to_java()
          # conversion for name [type = java.lang.String]
          @name = @name.to_s unless @name.nil?

          # conversion for pretty_name [type = java.lang.String]
          @pretty_name = @pretty_name.to_s unless @pretty_name.nil?

          # conversion for available [type = java.util.Collection]
          tmp = java.util.ArrayList.new
          (@available || []).each do |m|
            # conversion for m [type = org.killbill.billing.catalog.api.Product]
            m = m.to_java unless m.nil?
            tmp.add(m)
          end
          @available = tmp

          # conversion for included [type = java.util.Collection]
          tmp = java.util.ArrayList.new
          (@included || []).each do |m|
            # conversion for m [type = org.killbill.billing.catalog.api.Product]
            m = m.to_java unless m.nil?
            tmp.add(m)
          end
          @included = tmp

          # conversion for category [type = org.killbill.billing.catalog.api.ProductCategory]
          @category = Java::org.killbill.billing.catalog.api.ProductCategory.value_of( @category.to_s ) unless @category.nil?

          # conversion for catalog_name [type = java.lang.String]
          @catalog_name = @catalog_name.to_s unless @catalog_name.nil?

          # conversion for limits [type = org.killbill.billing.catalog.api.Limit[]]
          tmp = []
          (@limits || []).each do |m|
            # conversion for m [type = org.killbill.billing.catalog.api.Limit]
            m = m.to_java unless m.nil?
            tmp << m
          end
          @limits = tmp.to_java Java::org.killbill.billing.catalog.api.Limit
          self
        end

        def to_ruby(j_obj)
          # conversion for name [type = java.lang.String]
          @name = j_obj.name

          # conversion for pretty_name [type = java.lang.String]
          @pretty_name = j_obj.pretty_name

          # conversion for available [type = java.util.Collection]
          @available = j_obj.available
          tmp = []
          (@available || []).each do |m|
            # conversion for m [type = org.killbill.billing.catalog.api.Product]
            m = Killbill::Plugin::Model::Product.new.to_ruby(m) unless m.nil?
            tmp << m
          end
          @available = tmp

          # conversion for included [type = java.util.Collection]
          @included = j_obj.included
          tmp = []
          (@included || []).each do |m|
            # conversion for m [type = org.killbill.billing.catalog.api.Product]
            m = Killbill::Plugin::Model::Product.new.to_ruby(m) unless m.nil?
            tmp << m
          end
          @included = tmp

          # conversion for category [type = org.killbill.billing.catalog.api.ProductCategory]
          @category = j_obj.category
          @category = @category.to_s.to_sym unless @category.nil?

          # conversion for catalog_name [type = java.lang.String]
          @catalog_name = j_obj.catalog_name

          # conversion for limits [type = org.killbill.billing.catalog.api.Limit[]]
          @limits = j_obj.limits
          tmp = []
          (@limits || []).each do |m|
            # conversion for m [type = org.killbill.billing.catalog.api.Limit]
            m = Killbill::Plugin::Model::Limit.new.to_ruby(m) unless m.nil?
            tmp << m
          end
          @limits = tmp
          self
        end

      end
    end
  end
end
